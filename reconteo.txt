-- === ENTIDADES BÁSICAS ===

CREATE TABLE Clientes (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre TEXT NOT NULL,
    direccion TEXT,
    telefono TEXT
);

CREATE TABLE Proveedores (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre TEXT NOT NULL,
    direccion TEXT,
    telefono TEXT
);

CREATE TABLE Empleados (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre TEXT NOT NULL,
    puesto TEXT NOT NULL,
    fecha_ingreso DATE NOT NULL,
    salario REAL
);

-- === USUARIOS, ROLES Y CONTROL DE ACCESO ===

CREATE TABLE Roles (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre TEXT NOT NULL,
    descripcion TEXT
);

CREATE TABLE Usuarios (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    username TEXT NOT NULL UNIQUE,
    password TEXT NOT NULL,
    id_empleado INTEGER,
    id_rol INTEGER,
    activo INTEGER DEFAULT 1,
    FOREIGN KEY (id_empleado) REFERENCES Empleados(id),
    FOREIGN KEY (id_rol) REFERENCES Roles(id)
);

CREATE TABLE Sesiones (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_usuario INTEGER NOT NULL,
    fecha_ingreso DATETIME DEFAULT CURRENT_TIMESTAMP,
    fecha_salida DATETIME,
    ip TEXT,
    dispositivo TEXT,
    FOREIGN KEY (id_usuario) REFERENCES Usuarios(id)
);

CREATE TABLE Bitacora (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_usuario INTEGER,
    modulo TEXT,
    accion TEXT,
    descripcion TEXT,
    fecha DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_usuario) REFERENCES Usuarios(id)
);

-- === PRODUCCIÓN AVÍCOLA ===

CREATE TABLE LotesGallinas (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre TEXT NOT NULL,
    fecha_inicio DATE NOT NULL,
    fecha_fin DATE,
    cantidad_gallinas INTEGER NOT NULL,
    observaciones TEXT
);

CREATE TABLE ProduccionHuevos (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_lote INTEGER NOT NULL,
    fecha DATE NOT NULL,
    cantidad INTEGER NOT NULL,
    tipo_huevo TEXT,
    FOREIGN KEY (id_lote) REFERENCES LotesGallinas(id)
);

CREATE TABLE MermasHuevos (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_produccion INTEGER NOT NULL,
    cantidad INTEGER NOT NULL,
    motivo TEXT,
    FOREIGN KEY (id_produccion) REFERENCES ProduccionHuevos(id)
);

CREATE TABLE Vacunacion (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_lote INTEGER NOT NULL,
    fecha DATE NOT NULL,
    tipo_vacuna TEXT NOT NULL,
    observaciones TEXT,
    FOREIGN KEY (id_lote) REFERENCES LotesGallinas(id)
);

CREATE TABLE Mortalidad (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_lote INTEGER NOT NULL,
    fecha DATE NOT NULL,
    cantidad INTEGER NOT NULL,
    causa TEXT,
    FOREIGN KEY (id_lote) REFERENCES LotesGallinas(id)
);

CREATE TABLE AlimentoConsumo (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_lote INTEGER NOT NULL,
    fecha DATE NOT NULL,
    cantidad_kg REAL NOT NULL,
    tipo_alimento TEXT,
    FOREIGN KEY (id_lote) REFERENCES LotesGallinas(id)
);

-- === PRODUCTOS E INVENTARIO ===

CREATE TABLE Productos (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre TEXT NOT NULL,
    descripcion TEXT,
    unidad TEXT,
    tipo TEXT
);

CREATE TABLE Bodega (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre TEXT NOT NULL,
    ubicacion TEXT
);

CREATE TABLE Inventario (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_bodega INTEGER NOT NULL,
    id_producto INTEGER NOT NULL,
    cantidad REAL NOT NULL,
    fecha_actualizacion DATE,
    FOREIGN KEY (id_bodega) REFERENCES Bodega(id),
    FOREIGN KEY (id_producto) REFERENCES Productos(id)
);

CREATE TABLE MovimientosInventario (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_inventario INTEGER NOT NULL,
    fecha DATE NOT NULL,
    tipo_movimiento TEXT NOT NULL,
    cantidad REAL NOT NULL,
    motivo TEXT,
    referencia TEXT,
    FOREIGN KEY (id_inventario) REFERENCES Inventario(id)
);

-- === AUDITORÍA DE INVENTARIO ===

CREATE TABLE AuditoriasInventario (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_bodega INTEGER NOT NULL,
    id_producto INTEGER NOT NULL,
    fecha DATE NOT NULL,
    cantidad_teorica REAL NOT NULL,
    cantidad_fisica REAL NOT NULL,
    diferencia REAL,
    responsable TEXT,
    observaciones TEXT,
    FOREIGN KEY (id_bodega) REFERENCES Bodega(id),
    FOREIGN KEY (id_producto) REFERENCES Productos(id)
);

-- === CONTROL DE STOCK MÍNIMO ===

CREATE TABLE StockMinimo (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_producto INTEGER NOT NULL,
    id_bodega INTEGER NOT NULL,
    cantidad_minima REAL NOT NULL,
    cantidad_maxima REAL,
    FOREIGN KEY (id_producto) REFERENCES Productos(id),
    FOREIGN KEY (id_bodega) REFERENCES Bodega(id)
);

-- === VENTAS, DETALLES, CUENTAS POR COBRAR ===

CREATE TABLE Ventas (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_cliente INTEGER NOT NULL,
    fecha DATE NOT NULL,
    total REAL,
    metodo_pago TEXT,
    tipo_pago TEXT,
    plazo INTEGER,
    observaciones TEXT,
    FOREIGN KEY (id_cliente) REFERENCES Clientes(id)
);

CREATE TABLE DetalleVenta (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_venta INTEGER NOT NULL,
    id_producto INTEGER NOT NULL,
    cantidad REAL NOT NULL,
    precio_unitario REAL NOT NULL,
    id_produccion INTEGER, -- Para trazabilidad del lote
    FOREIGN KEY (id_venta) REFERENCES Ventas(id),
    FOREIGN KEY (id_producto) REFERENCES Productos(id),
    FOREIGN KEY (id_produccion) REFERENCES ProduccionHuevos(id)
);

CREATE TABLE CuentasPorCobrar (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_venta INTEGER NOT NULL,
    id_cliente INTEGER NOT NULL,
    fecha DATE NOT NULL,
    total REAL NOT NULL,
    saldo REAL NOT NULL,
    fecha_vencimiento DATE,
    estado TEXT DEFAULT 'Pendiente',
    FOREIGN KEY (id_venta) REFERENCES Ventas(id),
    FOREIGN KEY (id_cliente) REFERENCES Clientes(id)
);

CREATE TABLE PagosCuentasPorCobrar (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_cxc INTEGER NOT NULL,
    fecha DATE NOT NULL,
    monto REAL NOT NULL,
    metodo_pago TEXT,
    observaciones TEXT,
    id_banco INTEGER,
    id_metodo_pago INTEGER,
    FOREIGN KEY (id_cxc) REFERENCES CuentasPorCobrar(id),
    FOREIGN KEY (id_banco) REFERENCES Bancos(id),
    FOREIGN KEY (id_metodo_pago) REFERENCES MetodosPago(id)
);

-- === COMPRAS, DETALLES, CUENTAS POR PAGAR ===

CREATE TABLE Compras (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_proveedor INTEGER NOT NULL,
    fecha DATE NOT NULL,
    total REAL,
    metodo_pago TEXT,
    tipo_pago TEXT,
    plazo INTEGER,
    descripcion TEXT,
    FOREIGN KEY (id_proveedor) REFERENCES Proveedores(id)
);

CREATE TABLE DetalleCompra (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_compra INTEGER NOT NULL,
    id_producto INTEGER NOT NULL,
    cantidad REAL NOT NULL,
    precio_unitario REAL NOT NULL,
    FOREIGN KEY (id_compra) REFERENCES Compras(id),
    FOREIGN KEY (id_producto) REFERENCES Productos(id)
);

CREATE TABLE CuentasPorPagar (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_compra INTEGER NOT NULL,
    id_proveedor INTEGER NOT NULL,
    fecha DATE NOT NULL,
    total REAL NOT NULL,
    saldo REAL NOT NULL,
    fecha_vencimiento DATE,
    estado TEXT DEFAULT 'Pendiente',
    FOREIGN KEY (id_compra) REFERENCES Compras(id),
    FOREIGN KEY (id_proveedor) REFERENCES Proveedores(id)
);

CREATE TABLE PagosCuentasPorPagar (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_cxp INTEGER NOT NULL,
    fecha DATE NOT NULL,
    monto REAL NOT NULL,
    metodo_pago TEXT,
    observaciones TEXT,
    id_banco INTEGER,
    id_metodo_pago INTEGER,
    FOREIGN KEY (id_cxp) REFERENCES CuentasPorPagar(id),
    FOREIGN KEY (id_banco) REFERENCES Bancos(id),
    FOREIGN KEY (id_metodo_pago) REFERENCES MetodosPago(id)
);

-- === GASTOS OPERATIVOS ===

CREATE TABLE TipoGasto (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre TEXT NOT NULL,
    descripcion TEXT
);

CREATE TABLE GastosOperativos (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    fecha DATE NOT NULL,
    id_tipo_gasto INTEGER NOT NULL,
    monto REAL NOT NULL,
    descripcion TEXT,
    comprobante TEXT,
    FOREIGN KEY (id_tipo_gasto) REFERENCES TipoGasto(id)
);

-- === LOGÍSTICA (VEHÍCULOS Y RUTAS) ===

CREATE TABLE Vehiculos (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    placa TEXT NOT NULL,
    modelo TEXT,
    anio INTEGER,
    capacidad_kg REAL
);

CREATE TABLE Rutas (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre_ruta TEXT NOT NULL,
    descripcion TEXT
);

CREATE TABLE Entregas (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_venta INTEGER NOT NULL,
    id_vehiculo INTEGER NOT NULL,
    id_ruta INTEGER NOT NULL,
    fecha_entrega DATE NOT NULL,
    observaciones TEXT,
    FOREIGN KEY (id_venta) REFERENCES Ventas(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculos(id),
    FOREIGN KEY (id_ruta) REFERENCES Rutas(id)
);

-- === DEVOLUCIONES ===

CREATE TABLE DevolucionesVentas (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_venta INTEGER NOT NULL,
    fecha DATE NOT NULL,
    motivo TEXT,
    observaciones TEXT,
    FOREIGN KEY (id_venta) REFERENCES Ventas(id)
);

CREATE TABLE DetalleDevolucionVenta (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_devolucion INTEGER NOT NULL,
    id_producto INTEGER NOT NULL,
    cantidad REAL NOT NULL,
    FOREIGN KEY (id_devolucion) REFERENCES DevolucionesVentas(id),
    FOREIGN KEY (id_producto) REFERENCES Productos(id)
);

CREATE TABLE DevolucionesCompras (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_compra INTEGER NOT NULL,
    fecha DATE NOT NULL,
    motivo TEXT,
    observaciones TEXT,
    FOREIGN KEY (id_compra) REFERENCES Compras(id)
);

CREATE TABLE DetalleDevolucionCompra (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_devolucion INTEGER NOT NULL,
    id_producto INTEGER NOT NULL,
    cantidad REAL NOT NULL,
    FOREIGN KEY (id_devolucion) REFERENCES DevolucionesCompras(id),
    FOREIGN KEY (id_producto) REFERENCES Productos(id)
);

-- === CANJES/INTERCAMBIOS ===

CREATE TABLE Canjes (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    fecha DATE NOT NULL,
    id_cliente INTEGER,
    id_proveedor INTEGER,
    descripcion TEXT,
    observaciones TEXT,
    saldo REAL
);

CREATE TABLE CanjeDetalles (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_canje INTEGER NOT NULL,
    tipo TEXT NOT NULL,
    id_movimiento INTEGER NOT NULL,
    FOREIGN KEY (id_canje) REFERENCES Canjes(id)
);

-- === SUBPRODUCTOS Y RESIDUOS ===

CREATE TABLE Subproductos (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre TEXT NOT NULL,
    descripcion TEXT
);

CREATE TABLE ProduccionSubproductos (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_lote INTEGER,
    id_subproducto INTEGER,
    fecha DATE,
    cantidad REAL,
    unidad TEXT,
    observaciones TEXT,
    FOREIGN KEY (id_lote) REFERENCES LotesGallinas(id),
    FOREIGN KEY (id_subproducto) REFERENCES Subproductos(id)
);

-- === MANTENIMIENTO DE ACTIVOS ===

CREATE TABLE Activos (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre TEXT NOT NULL,
    tipo TEXT,
    descripcion TEXT
);

CREATE TABLE Mantenimiento (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_activo INTEGER NOT NULL,
    fecha DATE NOT NULL,
    tipo TEXT,
    costo REAL,
    descripcion TEXT,
    responsable TEXT,
    FOREIGN KEY (id_activo) REFERENCES Activos(id)
);

-- === NOTIFICACIONES Y ALERTAS ===

CREATE TABLE Notificaciones (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    tipo TEXT,
    mensaje TEXT,
    fecha DATE,
    leida INTEGER DEFAULT 0
);

-- === BANCOS Y MÉTODOS DE PAGO ===

CREATE TABLE Bancos (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre TEXT NOT NULL,
    cuenta TEXT,
    descripcion TEXT
);

CREATE TABLE MetodosPago (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre TEXT NOT NULL
);

-- === DOCUMENTOS Y GESTIÓN DOCUMENTAL ===

CREATE TABLE Documentos (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre TEXT NOT NULL,
    tipo TEXT,
    entidad TEXT,
    id_entidad INTEGER,
    archivo_url TEXT,
    fecha_subida DATE DEFAULT CURRENT_DATE
);

-- === EJEMPLO DE VISTA PARA DASHBOARD ===

CREATE VIEW ReporteVentasMensual AS
SELECT strftime('%Y-%m', fecha) AS mes,
       SUM(total) AS total_ventas,
       COUNT(*) AS cantidad_ventas
FROM Ventas
GROUP BY mes;

